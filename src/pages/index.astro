---
import Layout from "@layouts/Base.astro"
import { getCollection } from 'astro:content';

const projects = (await getCollection('projects')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---
<Layout>
	<section>
		<div class="mx-auto max-w-4xl px-6 sm:pb-16 md:px-12">
			<div class="flex h-full flex-col justify-between">
				<div>
					<h1 class="mt-16 text-3xl font-semibold text-gray-950 dark:text-white">Peter Ciya</h1>
					<p class="text-sm tracking-wide text-gray-600 dark:text-gray-400">Data Analyst & Beta MLSA</p>

					<p class="my-12 text-sm text-gray-700 dark:text-gray-300 sm:w-2/3 xl:w-1/2">Data Analyst (Python, Power Bi & SQL) | Graduated in Software Engineering | I am a Data Scientist & Engineer enthusiast...</p>
					<div class="flex items-center gap-4">
						<a href="mailto:hello@tailus.io" class="group inline-flex h-8 items-center gap-2.5 rounded-md bg-gray-950 text-white px-3 transition-all duration-300 hover:bg-gray-900 dark:bg-white dark:text-gray-950 dark:hover:bg-gray-200">
							<span class="text-sm">Let's talk</span>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3 opacity-60 transition duration-300 group-hover:rotate-45">
								<path fill-rule="evenodd" stroke-width="2" d="M8.25 3.75H19.5a.75.75 0 01.75.75v11.25a.75.75 0 01-1.5 0V6.31L5.03 20.03a.75.75 0 01-1.06-1.06L17.69 5.25H8.25a.75.75 0 010-1.5z" clip-rule="evenodd" />
							</svg>
						</a>
						<a href="/about" class="h-8 px-3 rounded-md flex items-center justify-center hover:bg-gray-100 dark:hover:bg-gray-800 text-sm text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white">
							About me
						</a>
					</div>
				</div>
			</div>
		</div>
	</section>

	<section id="projects" class="scroll-mt-12">
		<div class="mx-auto mt-16 max-w-4xl px-6 sm:mt-20 sm:pb-16 md:px-12 lg:mt-16">
			<h2 class="text-gray-950 dark:text-white">Selected Works</h2>
			<span class="text-sm tracking-wide text-gray-600 dark:text-gray-200">2010 -{'>'} 2023</span>

			<div class="-mx-6 mt-8 space-y-12 sm:space-y-16 md:space-y-24 sm:-mx-12 sm:mt-12 lg:-mx-24">
				{
					projects.map((project) => (
						<a class="block" href={`/projects/${project.id}`}>
							<img 
								class="cover aspect-square origin-bottom rounded-xl object-cover opacity-0 transition-all duration-1000 [clip-path:inset(3%_3%_3%_3%_round_1rem)] scale-[1.05] hover:[clip-path:inset(1%_1%_1%_1%_round_1rem)] sm:aspect-video" 
								src={project.data.heroImage}
								alt={project.data.title}
								height="1500" 
								width="1500" 
							/>
							<div class="flex items-center justify-between px-6 py-2 sm:px-12 sm:py-4 lg:px-24">
								<h3 class="text-gray-950 dark:text-white">
									{project.data.title}
								</h3>
								{
									project.data.projectType && (
										<span class="text-sm text-gray-500 dark:text-gray-300">
											{project.data.projectType}
										</span>
									)
								}
							</div>
						</a>
					))
				}
			</div>
		</div>
	</section>

	<script>
		let options = {
			root: null,
			threshold: 0,
			rootMargin: "50px",
		};

		const covers = document.querySelectorAll(".cover");

		const observer = new IntersectionObserver(function (entries) {
			entries.forEach((entry) => {
				entry.isIntersecting ? 
					entry.target.classList.remove("scale-[1.05]", "opacity-0") :
					entry.target.classList.add("scale-[1.05]", "opacity-0")
			});
		}, options);

		covers.forEach((cover) => {
			observer.observe(cover);
		});
	</script>
</Layout>
